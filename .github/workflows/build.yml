name: Build & Ship

on:
  push:
    branches:
      - main # Trigger the  workflow on push event to the main branch

jobs:
  web-build:
    runs-on: ubuntu-latest
    timeout-minutes: 45 # Set the timeout of 45 minutes for this job
    steps:
      - uses: actions/checkout@v4  # Use checkout to support cloning local projects to runner environment
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # Use Zulu provide jdk
          java-version: 17
          cache: 'gradle'
          cache-dependency-path: | # regex to match all sub-projects
            **/*.gradle*
            **/gradle-wrapper.properties

      - name: Build web js app
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 2
          command: ./gradlew :composeApp:jsBrowserDevelopmentExecutableDistribution

      - name: Push WebAssembly build output to another repository
        uses: cpina/github-action-push-to-another-repository@v1.7.2
        env:
          API_TOKEN_GITHUB: ${{ secrets.PAT_TOKEN }}
        with:
          source-directory: composeApp/build/dist/js/developmentExecutable
          destination-github-username: 'crowforkotlin'
          destination-repository-name: 'mordecaix-pages-js'
          user-email: crowforkotlin@gmail.com
          commit-message: See ORIGIN_COMMIT from $GITHUB_REF
          create-target-branch-if-needed: true
          target-branch: js


  wasm-build:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'gradle'
          cache-dependency-path: | # regex to match all sub-projects
            **/*.gradle*
            **/gradle-wrapper.properties

      - name: Build wasm app
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 2
          command: ./gradlew :composeApp:wasmBrowserDevelopmentExecutableDistribution
      - name: Push WebAssembly build output to another repository
        uses: cpina/github-action-push-to-another-repository@v1.7.2
        env:
          API_TOKEN_GITHUB: ${{ secrets.PAT_TOKEN }}
        with:
          source-directory: composeApp/build/dist/wasmJs/developmentExecutable
          destination-github-username: 'crowforkotlin'
          destination-repository-name: 'mordecaix-pages-wasmjs'
          user-email: crowforkotlin@gmail.com
          commit-message: See ORIGIN_COMMIT from $GITHUB_REF
          create-target-branch-if-needed: true
          target-branch: wasmJs


  desktop-build:
    runs-on: windows-latest
    timeout-minutes: 45 # 设置超时时间为 45 分钟
    steps:
      - uses: actions/checkout@v4

      # Step 1: 检出代码

      # Step 2: 下载JBR (JetBrains Runtime)
      - name: Download and Extract JBR
        run: |
          mkdir -p C:\jbr
          curl -L -o C:\jbr.tar.gz https://cache-redirector.jetbrains.com/intellij-jbr/jbrsdk_jcef-17.0.11-windows-x64-b1312.2.tar.gz

      # Step 3: 配置 JAVA_HOME 环境变量
      - name: Configure JAVA_HOME
        uses: actions/setup-java@v4
        with:
          distribution: 'jdkfile'
          jdkFile: C:\jbr.tar.gz
          java-version: '17.0.11'
          cache: 'gradle'
          cache-dependency-path: | # regex to match all sub-projects
            **/*.gradle*
            **/gradle-wrapper.properties

      # Step 4: 构建 EXE
      - name: Build exe app
        run: |
          .\gradlew packageUberJarForCurrentOS
          .\gradlew createDistributable
          .\gradlew packageExe

      # Step 5: 保存构建产物
      - name: Archive Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: distributable
          if-no-files-found: ignore
          path: composeApp/build/compose/binaries/main/app


  android-build:
    runs-on: ubuntu-latest
    timeout-minutes: 45 # 设置超时时间为 45 分钟
    steps:
      - uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # Use Zulu provide jdk
          java-version: 17
          cache: 'gradle'
          cache-dependency-path: | # regex to match all sub-projects
            **/*.gradle*
            **/gradle-wrapper.properties
      - name: Build Android Debug App
        run: |
          ./gradlew assembleRelease
      - name: Archive Debug Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Android Debug Apk
          if-no-files-found: ignore
          path: composeApp/build/outputs/apk/debug
      - name: Build Android Release App
        run: |
          ./gradlew assembleRelease
      - name: Archive Release Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Android Release Apk
          if-no-files-found: ignore
          path: composeApp/build/outputs/apk/release