name: Build & Ship

on:
  push:
    branches:
      - dev  # 仅当推送到 main 分支时触发
  pull_request:
    types: [ closed ]  # 检测 PR 合并事件
    branches:
      - main  # 仅当 PR 合并到 main 分支时触发

env:
  APP_NAME: mordecaix

jobs:
  # Step 1: 读取属性文件
  read-properties:
    runs-on: ubuntu-latest
    outputs: # 定义 job 的输出
      version_name_desktop: ${{ steps.properties.outputs.version-name-desktop }}
      version_name_app: ${{ steps.properties.outputs.version-name-app }}
      version_name_web: ${{ steps.properties.outputs.version-name-web }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Read Properties File
        id: 'properties'
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: './gradle.properties'
          properties: 'version.name.desktop version.name.app version.name.web'


  macos-desktop-build:
    needs: read-properties
    runs-on: macos-latest
    timeout-minutes: 45 # 设置超时时间为 45 分钟
    steps:
      - uses: actions/checkout@v4
      - name: print
        run: |
          echo "Ubuntu Release App - ${{ env.APP_NAME }}${{ needs.read-properties.outputs.version_name_desktop }}.exe"
      - name: Download and Extract JBR
        run: |
          mkdir -p /home/runner/jbr
          curl -L -o /home/runner/jbr.tar.gz https://cache-redirector.jetbrains.com/intellij-jbr/jbrsdk_jcef-17.0.11-osx-aarch64-b1312.2.tar.gz
      - name: Configure JAVA_HOME
        uses: actions/setup-java@v4
        with:
          distribution: 'jdkfile'
          jdkFile: /home/runner/jbr.tar.gz
          java-version: '17.0.11'
          cache: 'gradle'
          cache-dependency-path: | # regex to match all sub-projects
            **/*.gradle*
            **/gradle-wrapper.properties
      - name: Build Ubuntu Debug App
        run: |
          ./gradlew packageUberJarForCurrentOS
          ./gradlew createDistributable
          ./gradlew packagePkg
      - name: Archive Ubuntu Debug App Installer Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Ubuntu Debug App Installer - ${{ env.APP_NAME }}-${{ needs.read-properties.outputs.version_name_desktop }}
          if-no-files-found: ignore
          path: composeApp/build/compose/binaries/main/app
      - name: Archive Ubuntu Debug Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Ubuntu Debug App - ${{ env.APP_NAME }}-${{ needs.read-properties.outputs.version_name_desktop }}
          if-no-files-found: ignore
          path: composeApp/build/compose/binaries/main/deb
      - name: Build Ubuntu Release App
        run: |
          ./gradlew createReleaseDistributable
          ./gradlew packageReleasePkg
      - name: Archive Ubuntu Release App Installer Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Ubuntu Release App Installer - ${{ env.APP_NAME }}-${{ needs.read-properties.outputs.version_name_desktop }}
          if-no-files-found: ignore
          path: composeApp/build/compose/binaries/main-release/app
      - name: Archive Ubuntu Release App Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Ubuntu Release App - ${{ env.APP_NAME }}-${{ needs.read-properties.outputs.version_name_desktop }}
          if-no-files-found: ignore
          path: composeApp/build/compose/binaries/main-release/deb
